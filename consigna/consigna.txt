Para este desafío integrador final, te propongo que armes una app que te sirva para automatizar una tarea de tu día a día. La app tiene que estar modularizada, según el patrón MVC como se muestra en el grafico adjunto. Además, tiene que cumplir con los siguientes puntos:

Archivo README.md que describa de forma clara cómo un usuario tiene que usar la aplicación. Tiene que ser un instructivo sencillo y facil de entender. Aprovechá los scripts configurables del package.json para simplificar los comandos.
Consumir datos de al menos una API pública.
Uso de funciones asincrónicas: async/await y/o .then().
Acciones de lectura y escritura sobre un archivo JSON.
Realizar las validaciones necesarias.
Una vez terminado el proyecto, súbanlo a su cuenta personal de GitHub.

Patron MVC (Usuario <--> Vista <-> Controlador <-> Modelo <--> BD/APIs).

 MODELO: Define las distintas ACCIONES que puedo realizar con la base de datos (Obtener un recurso, eliminarlo, modificarlo, crearlo)
 y el FORMATO que va a tener cada recurso/dato (Si es un libro las propiedades que va a tener cuando se almacene) -->

CONTROLADOR: Es el cerebro de la aplicación. Según lo que SOLICITE el cliente se va a servir de todas las ACCIONES/FUNCIONES/CLASES disponibles en el modelo para lograr un resultado final  -->

 VISTAS: Es donde van a estar definidas las RUTAS de la aplicacion, de las cuales el cliente se va a poder servir. Éstas deberán utilizar las FUNCIONES/CLASES definidas en el controlador -->

 RECOMENDACIONES: COMIENZA SIEMPRE DESDE EL CLIENTE ==> CLIENTE <-> VISTA <-> CONTROLADOR <-> MODELO <-> BB.DD/API